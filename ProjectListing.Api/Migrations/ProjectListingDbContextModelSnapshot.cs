// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectListing.Api.Data;

#nullable disable

namespace ProjectListing.Api.Migrations
{
    [DbContext(typeof(ProjectListingDbContext))]
    partial class ProjectListingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectListing.Api.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subdivision")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Last_Name = "Anko",
                            Name = "Ava",
                            Position = "Designer",
                            Status = "Active",
                            Subdivision = "Design Team"
                        },
                        new
                        {
                            Id = 2,
                            Last_Name = "Benko",
                            Name = "Bab",
                            Position = ".NET Developer",
                            Status = "Active",
                            Subdivision = "Dev Team"
                        },
                        new
                        {
                            Id = 3,
                            Last_Name = "Cenko",
                            Name = "Cava",
                            Position = "Project Manager",
                            Status = "Active",
                            Subdivision = "Managment"
                        });
                });

            modelBuilder.Entity("ProjectListing.Api.Data.EmployeeProject", b =>
                {
                    b.Property<int>("Id_Project")
                        .HasColumnType("int");

                    b.Property<int>("Id_Employee")
                        .HasColumnType("int");

                    b.HasKey("Id_Project", "Id_Employee");

                    b.HasIndex("Id_Employee");

                    b.ToTable("EmployeeProjects");

                    b.HasData(
                        new
                        {
                            Id_Project = 1,
                            Id_Employee = 1
                        },
                        new
                        {
                            Id_Project = 1,
                            Id_Employee = 2
                        },
                        new
                        {
                            Id_Project = 2,
                            Id_Employee = 1
                        });
                });

            modelBuilder.Entity("ProjectListing.Api.Data.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "To do some \"A\" things",
                            EndDate = new DateTime(2025, 1, 4, 22, 39, 14, 370, DateTimeKind.Local).AddTicks(7042),
                            Name = "Project A",
                            StartDate = new DateTime(2024, 11, 4, 22, 39, 14, 370, DateTimeKind.Local).AddTicks(6997),
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Description = "To do some \"B\" things very seriously",
                            EndDate = new DateTime(2024, 12, 4, 22, 39, 14, 370, DateTimeKind.Local).AddTicks(7052),
                            Name = "Project B",
                            StartDate = new DateTime(2024, 11, 4, 22, 39, 14, 370, DateTimeKind.Local).AddTicks(7050),
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("ProjectListing.Api.Data.EmployeeProject", b =>
                {
                    b.HasOne("ProjectListing.Api.Data.Employee", "Employee")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("Id_Employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectListing.Api.Data.Project", "Project")
                        .WithMany("EmployeeProjects")
                        .HasForeignKey("Id_Project")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ProjectListing.Api.Data.Employee", b =>
                {
                    b.Navigation("EmployeeProjects");
                });

            modelBuilder.Entity("ProjectListing.Api.Data.Project", b =>
                {
                    b.Navigation("EmployeeProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
